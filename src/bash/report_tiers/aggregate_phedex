#!/bin/sh

# Parse date argument
date=''

if [[ -n $1 ]]
then
    date=$1
fi

date_length=${#date}
if [[ $date_length != 8 ]]
then
    echo 'Invalid date. Correct format: YYYYMMDD. Example: 20170228'
    exit
fi

echo 'Aggregating for date: '$date

location=/cms/users/$USER/phedex_datasets

if [[ -n $2 ]]
then
    location=$2
fi

echo 'Results path: '$location

# Results will be put here
hdir=hdfs://$location

# Get current script's absolute path
scriptpath="$( cd "$(dirname "$0")" ; pwd -P )"

# Remove previous data first
hadoop fs -rm -r $location

PYTHONPATH=$scriptpath/../../python $scriptpath/../../../bin/run_spark /reports/aggregate_phedex.py --fout=$hdir --yarn --verbose --date=$date

hadoop fs -test -e $hdir
exists=$?

# Download results and recreate csv files only if results exist in hdfs
if [[ $exists -eq 0 ]]
then
    # Delete previously downloaded directory and download new one
    rm -rf "$scriptpath/$(basename $hdir)"
    hadoop fs -get $hdir $scriptpath

    # extract header
    head -1 $scriptpath/phedex_datasets/part-00000 > $scriptpath/phedex_df.csv

    # concatenate all parts except header
    header=`cat $scriptpath/phedex_df.csv`
    cat $scriptpath/phedex_datasets/part* | grep -v $header >> $scriptpath/phedex_df.csv
fi
